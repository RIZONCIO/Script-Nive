# gui/optimization_results.py - M√©todos para exibir resultados das otimiza√ß√µes

from tkinter import messagebox


class OptimizationResults:
    """Classe respons√°vel por exibir os resultados das otimiza√ß√µes"""

    def __init__(self, optimization_handlers):
        """Inicializar classe de resultados"""
        self.handlers = optimization_handlers

    def show_telemetry_result(
        self, progress_window, status_label, success, sucessos, erros
    ):
        """Exibir resultado da remo√ß√£o de telemetria"""
        if success and len(erros) == 0:
            status_label.config(text="‚úÖ Telemetria removida com sucesso!")
            result_message = f"üéâ TELEMETRIA REMOVIDA COM SUCESSO!\n\n"
            result_message += f"‚úÖ {len(sucessos)} configura√ß√µes aplicadas\n\n"
            result_message += "üîí PRIVACIDADE MELHORADA:\n"
            result_message += "‚Ä¢ Telemetria do Windows desabilitada\n"
            result_message += "‚Ä¢ Coleta de dados interrompida\n"
            result_message += "‚Ä¢ Tracking de aplica√ß√µes desabilitado\n"
            result_message += "‚Ä¢ SmartScreen desabilitado\n"
            result_message += "‚Ä¢ AutoLoggers de diagn√≥stico parados\n\n"
            result_message += (
                "‚ö†Ô∏è IMPORTANTE: Reinicie o sistema para aplicar todas as mudan√ßas!"
            )

            progress_window.after(3000, progress_window.destroy)
            messagebox.showinfo("Telemetria Removida", result_message)

        elif len(sucessos) > len(erros):
            status_label.config(text="‚ö†Ô∏è Conclu√≠do com alguns avisos")
            result_message = f"‚ö†Ô∏è TELEMETRIA PARCIALMENTE REMOVIDA\n\n"
            result_message += f"‚úÖ Sucessos: {len(sucessos)}\n"
            result_message += f"‚ö†Ô∏è Avisos/Erros: {len(erros)}\n\n"
            result_message += "üîí A maior parte da telemetria foi desabilitada.\n\n"
            result_message += "Detalhes dos erros:\n"
            for erro in erros[:5]:
                result_message += f"‚Ä¢ {erro}\n"
            if len(erros) > 5:
                result_message += f"... e mais {len(erros) - 5} erros\n"
            result_message += "\n‚ö†Ô∏è IMPORTANTE: Reinicie o sistema!"

            progress_window.after(2000, progress_window.destroy)
            messagebox.showwarning("Remo√ß√£o Parcial", result_message)

        else:
            status_label.config(text="‚ùå Conclu√≠do com v√°rios erros")
            result_message = f"‚ùå MUITOS ERROS NA REMO√á√ÉO\n\n"
            result_message += f"‚úÖ Sucessos: {len(sucessos)}\n"
            result_message += f"‚ùå Erros: {len(erros)}\n\n"
            result_message += "Principais erros:\n"
            for erro in erros[:3]:
                result_message += f"‚Ä¢ {erro}\n"
            result_message += "\nVerifique se est√° executando como Administrador!"

            progress_window.after(2000, progress_window.destroy)
            messagebox.showerror("Erros na Remo√ß√£o", result_message)

        # Log da atividade
        self.handlers.parent.log_activity(
            f"Remo√ß√£o de telemetria: {len(sucessos)} sucessos, {len(erros)} erros"
        )

    def show_features_result(
        self, progress_window, status_label, success, sucessos, erros
    ):
        """Exibir resultado da remo√ß√£o de features"""
        if success and len(erros) == 0:
            status_label.config(text="‚úÖ Features removidas com sucesso!")
            result_message = f"üéâ FEATURES REMOVIDAS COM SUCESSO!\n\n"
            result_message += f"‚úÖ {len(sucessos)} configura√ß√µes aplicadas\n\n"
            result_message += "üóëÔ∏è RECURSOS REMOVIDOS:\n"
            result_message += "‚Ä¢ IIS e componentes web desabilitados\n"
            result_message += "‚Ä¢ Apps opcionais removidos\n"
            result_message += "‚Ä¢ Recursos de rede avan√ßados desabilitados\n"
            result_message += "‚Ä¢ Protocolo SMB1 desabilitado\n"
            result_message += "‚Ä¢ Features de desenvolvimento removidas\n\n"
            result_message += (
                "‚ö†Ô∏è IMPORTANTE: Reinicie o sistema para aplicar todas as mudan√ßas!"
            )

            progress_window.after(3000, progress_window.destroy)
            messagebox.showinfo("Features Removidas", result_message)

        elif len(sucessos) > len(erros):
            status_label.config(text="‚ö†Ô∏è Conclu√≠do com alguns avisos")
            result_message = f"‚ö†Ô∏è FEATURES PARCIALMENTE REMOVIDAS\n\n"
            result_message += f"‚úÖ Sucessos: {len(sucessos)}\n"
            result_message += f"‚ö†Ô∏è Avisos/Erros: {len(erros)}\n\n"
            result_message += "üóëÔ∏è A maior parte das features foi removida.\n\n"
            result_message += "Detalhes dos erros:\n"
            for erro in erros[:5]:
                result_message += f"‚Ä¢ {erro}\n"
            if len(erros) > 5:
                result_message += f"... e mais {len(erros) - 5} erros\n"
            result_message += "\n‚ö†Ô∏è IMPORTANTE: Reinicie o sistema!"

            progress_window.after(2000, progress_window.destroy)
            messagebox.showwarning("Remo√ß√£o Parcial", result_message)

        else:
            status_label.config(text="‚ùå Conclu√≠do com v√°rios erros")
            result_message = f"‚ùå MUITOS ERROS NA REMO√á√ÉO\n\n"
            result_message += f"‚úÖ Sucessos: {len(sucessos)}\n"
            result_message += f"‚ùå Erros: {len(erros)}\n\n"
            result_message += "Principais erros:\n"
            for erro in erros[:3]:
                result_message += f"‚Ä¢ {erro}\n"
            result_message += "\nVerifique se est√° executando como Administrador!"

            progress_window.after(2000, progress_window.destroy)
            messagebox.showerror("Erros na Remo√ß√£o", result_message)

        # Log da atividade
        self.handlers.parent.log_activity(
            f"Remo√ß√£o de features: {len(sucessos)} sucessos, {len(erros)} erros"
        )

    def show_animations_result(
        self, progress_window, status_label, success, sucessos, erros
    ):
        """Exibir resultado da remo√ß√£o de anima√ß√µes"""
        if success and len(erros) == 0:
            status_label.config(text="‚úÖ Anima√ß√µes desabilitadas com sucesso!")
            result_message = f"üéâ ANIMA√á√ïES REMOVIDAS COM SUCESSO!\n\n"
            result_message += f"‚úÖ {len(sucessos)} configura√ß√µes aplicadas\n\n"
            result_message += "üé® MELHORIAS APLICADAS:\n"
            result_message += "‚Ä¢ Anima√ß√µes de janelas desabilitadas\n"
            result_message += "‚Ä¢ Efeitos visuais otimizados\n"
            result_message += "‚Ä¢ Barra de tarefas mais responsiva\n"
            result_message += "‚Ä¢ Transpar√™ncias desnecess√°rias removidas\n"
            result_message += "‚Ä¢ Sistema mais r√°pido e fluido\n\n"
            result_message += "‚ö†Ô∏è IMPORTANTE: Reinicie ou fa√ßa logoff/login para aplicar todas as mudan√ßas!"

            progress_window.after(3000, progress_window.destroy)
            messagebox.showinfo("Anima√ß√µes Removidas", result_message)

        elif len(sucessos) > len(erros):
            status_label.config(text="‚ö†Ô∏è Conclu√≠do com alguns avisos")
            result_message = f"‚ö†Ô∏è ANIMA√á√ïES PARCIALMENTE REMOVIDAS\n\n"
            result_message += f"‚úÖ Sucessos: {len(sucessos)}\n"
            result_message += f"‚ö†Ô∏è Avisos/Erros: {len(erros)}\n\n"
            result_message += "üé® A maior parte das anima√ß√µes foi desabilitada.\n\n"
            result_message += "Detalhes dos erros:\n"
            for erro in erros[:5]:
                result_message += f"‚Ä¢ {erro}\n"
            if len(erros) > 5:
                result_message += f"... e mais {len(erros) - 5} erros\n"
            result_message += "\n‚ö†Ô∏è IMPORTANTE: Reinicie o sistema!"

            progress_window.after(2000, progress_window.destroy)
            messagebox.showwarning("Remo√ß√£o Parcial", result_message)

        else:
            status_label.config(text="‚ùå Conclu√≠do com v√°rios erros")
            result_message = f"‚ùå MUITOS ERROS NA REMO√á√ÉO\n\n"
            result_message += f"‚úÖ Sucessos: {len(sucessos)}\n"
            result_message += f"‚ùå Erros: {len(erros)}\n\n"
            result_message += "Principais erros:\n"
            for erro in erros[:3]:
                result_message += f"‚Ä¢ {erro}\n"
            result_message += "\nVerifique se est√° executando como Administrador!"

            progress_window.after(2000, progress_window.destroy)
            messagebox.showerror("Erros na Remo√ß√£o", result_message)

        # Log da atividade
        self.handlers.parent.log_activity(
            f"Remo√ß√£o de anima√ß√µes: {len(sucessos)} sucessos, {len(erros)} erros"
        )

    def show_edge_result(self, progress_window, status_label, success, sucessos, erros):
        """Exibir resultado da otimiza√ß√£o do Edge"""
        if success and len(erros) == 0:
            status_label.config(text="‚úÖ Edge otimizado com sucesso!")
            result_message = f"üéâ MICROSOFT EDGE OTIMIZADO COM SUCESSO!\n\n"
            result_message += f"‚úÖ {len(sucessos)} configura√ß√µes aplicadas\n\n"
            result_message += "üåç OTIMIZA√á√ïES APLICADAS:\n"
            result_message += "‚Ä¢ Sidebar/bot√£o Bing desabilitado\n"
            result_message += "‚Ä¢ Execu√ß√£o em segundo plano removida\n"
            result_message += "‚Ä¢ Inicializa√ß√£o autom√°tica desabilitada\n"
            result_message += "‚Ä¢ Bot√µes desnecess√°rios removidos\n"
            result_message += "‚Ä¢ Privacidade melhorada\n"
            result_message += "‚Ä¢ Performance otimizada\n\n"
            result_message += "‚ö†Ô∏è IMPORTANTE: Reinicie o Microsoft Edge para aplicar todas as mudan√ßas!"

            progress_window.after(3000, progress_window.destroy)
            messagebox.showinfo("Edge Otimizado", result_message)

        elif len(sucessos) > len(erros):
            status_label.config(text="‚ö†Ô∏è Conclu√≠do com alguns avisos")
            result_message = f"‚ö†Ô∏è EDGE PARCIALMENTE OTIMIZADO\n\n"
            result_message += f"‚úÖ Sucessos: {len(sucessos)}\n"
            result_message += f"‚ö†Ô∏è Avisos/Erros: {len(erros)}\n\n"
            result_message += "üåç A maior parte das otimiza√ß√µes foi aplicada.\n\n"
            result_message += "Detalhes dos erros:\n"
            for erro in erros[:5]:
                result_message += f"‚Ä¢ {erro}\n"
            if len(erros) > 5:
                result_message += f"... e mais {len(erros) - 5} erros\n"
            result_message += "\n‚ö†Ô∏è IMPORTANTE: Reinicie o Edge!"

            progress_window.after(2000, progress_window.destroy)
            messagebox.showwarning("Otimiza√ß√£o Parcial", result_message)

        else:
            status_label.config(text="‚ùå Conclu√≠do com v√°rios erros")
            result_message = f"‚ùå MUITOS ERROS NA OTIMIZA√á√ÉO\n\n"
            result_message += f"‚úÖ Sucessos: {len(sucessos)}\n"
            result_message += f"‚ùå Erros: {len(erros)}\n\n"
            result_message += "Principais erros:\n"
            for erro in erros[:3]:
                result_message += f"‚Ä¢ {erro}\n"
            result_message += "\nVerifique se est√° executando como Administrador!"

            progress_window.after(2000, progress_window.destroy)
            messagebox.showerror("Erros na Otimiza√ß√£o", result_message)

        # Log da atividade
        self.handlers.parent.log_activity(
            f"Otimiza√ß√£o do Edge: {len(sucessos)} sucessos, {len(erros)} erros"
        )

    def show_acceleration_result(
        self, progress_window, status_label, success, sucessos, erros
    ):
        """Exibir resultado da acelera√ß√£o do Windows"""
        if success and len(erros) == 0:
            status_label.config(text="‚úÖ Todas as otimiza√ß√µes foram aplicadas!")
            result_message = f"üéâ SUCESSO COMPLETO!\n\n"
            result_message += (
                f"‚úÖ {len(sucessos)} otimiza√ß√µes aplicadas com sucesso\n\n"
            )
            result_message += (
                "‚ö†Ô∏è IMPORTANTE: Reinicie o sistema para aplicar todas as mudan√ßas!"
            )

            progress_window.after(3000, progress_window.destroy)
            messagebox.showinfo("Otimiza√ß√µes Conclu√≠das", result_message)

        elif len(sucessos) > len(erros):
            status_label.config(text="‚ö†Ô∏è Conclu√≠do com alguns avisos")
            result_message = f"‚ö†Ô∏è CONCLU√çDO COM AVISOS\n\n"
            result_message += f"‚úÖ Sucessos: {len(sucessos)}\n"
            result_message += f"‚ö†Ô∏è Avisos/Erros: {len(erros)}\n\n"
            result_message += "Detalhes dos erros:\n"
            for erro in erros[:5]:
                result_message += f"‚Ä¢ {erro}\n"
            if len(erros) > 5:
                result_message += f"... e mais {len(erros) - 5} erros\n"
            result_message += "\n‚ö†Ô∏è IMPORTANTE: Reinicie o sistema!"

            progress_window.after(2000, progress_window.destroy)
            messagebox.showwarning("Otimiza√ß√µes Conclu√≠das", result_message)

        else:
            status_label.config(text="‚ùå Conclu√≠do com v√°rios erros")
            result_message = f"‚ùå MUITOS ERROS ENCONTRADOS\n\n"
            result_message += f"‚úÖ Sucessos: {len(sucessos)}\n"
            result_message += f"‚ùå Erros: {len(erros)}\n\n"
            result_message += "Principais erros:\n"
            for erro in erros[:3]:
                result_message += f"‚Ä¢ {erro}\n"
            result_message += "\nVerifique se est√° executando como Administrador!"

            progress_window.after(2000, progress_window.destroy)
            messagebox.showerror("Erros na Otimiza√ß√£o", result_message)

        # Log da atividade
        self.handlers.parent.log_activity(
            f"Acelera√ß√£o do Windows: {len(sucessos)} sucessos, {len(erros)} erros"
        )

    def show_tasks_result(
        self, progress_window, status_label, success, sucessos, erros
    ):
        """Exibir resultado da desabilita√ß√£o de tarefas"""
        if success and len(erros) == 0:
            status_label.config(text="‚úÖ Tarefas desabilitadas com sucesso!")
            result_message = f"üéâ TAREFAS AGENDADAS DESABILITADAS COM SUCESSO!\n\n"
            result_message += f"‚úÖ {len(sucessos)} tarefas processadas\n\n"
            result_message += "üìÖ TAREFAS DESABILITADAS:\n"
            result_message += "‚Ä¢ Telemetria e coleta de dados removida\n"
            result_message += "‚Ä¢ Customer Experience Program desabilitado\n"
            result_message += "‚Ä¢ Diagn√≥sticos autom√°ticos parados\n"
            result_message += (
                "‚Ä¢ Atualiza√ß√µes autom√°ticas do Office/Edge desabilitadas\n"
            )
            result_message += "‚Ä¢ Tarefas de manuten√ß√£o otimizadas\n\n"
            result_message += (
                "‚ö†Ô∏è IMPORTANTE: Reinicie o sistema para aplicar todas as mudan√ßas!"
            )

            progress_window.after(3000, progress_window.destroy)
            messagebox.showinfo("Tarefas Desabilitadas", result_message)

        elif len(sucessos) > len(erros):
            status_label.config(text="‚ö†Ô∏è Conclu√≠do com alguns avisos")
            result_message = f"‚ö†Ô∏è TAREFAS PARCIALMENTE DESABILITADAS\n\n"
            result_message += f"‚úÖ Sucessos: {len(sucessos)}\n"
            result_message += f"‚ö†Ô∏è Avisos/Erros: {len(erros)}\n\n"
            result_message += "üìÖ A maior parte das tarefas foi desabilitada.\n\n"
            result_message += "Detalhes dos erros:\n"
            for erro in erros[:5]:
                result_message += f"‚Ä¢ {erro}\n"
            if len(erros) > 5:
                result_message += f"... e mais {len(erros) - 5} erros\n"
            result_message += "\n‚ö†Ô∏è IMPORTANTE: Reinicie o sistema!"

            progress_window.after(2000, progress_window.destroy)
            messagebox.showwarning("Desabilita√ß√£o Parcial", result_message)

        else:
            status_label.config(text="‚ùå Conclu√≠do com v√°rios erros")
            result_message = f"‚ùå MUITOS ERROS NA DESABILITA√á√ÉO\n\n"
            result_message += f"‚úÖ Sucessos: {len(sucessos)}\n"
            result_message += f"‚ùå Erros: {len(erros)}\n\n"
            result_message += "Principais erros:\n"
            for erro in erros[:3]:
                result_message += f"‚Ä¢ {erro}\n"
            result_message += "\nVerifique se est√° executando como Administrador!"

            progress_window.after(2000, progress_window.destroy)
            messagebox.showerror("Erros na Desabilita√ß√£o", result_message)

        # Log da atividade
        self.handlers.parent.log_activity(
            f"Desabilita√ß√£o de tarefas: {len(sucessos)} sucessos, {len(erros)} erros"
        )

    def show_disable_software_result(
        self, progress_window, status_label, success, sucessos, erros
    ):
        """Exibir resultado da desabilita√ß√£o de softwares"""
        if success and len(erros) == 0:
            status_label.config(text="‚úÖ Softwares desabilitados com sucesso!")
            result_message = f"üéâ SOFTWARES DESABILITADOS COM SUCESSO!\n\n"
            result_message += f"‚úÖ {len(sucessos)} softwares processados\n\n"
            result_message += "üíª SOFTWARES DESABILITADOS:\n"
            result_message += "‚Ä¢ Aplicativos desnecess√°rios removidos\n"
            result_message += "‚Ä¢ Softwares em segundo plano desabilitados\n"
            result_message += "‚Ä¢ Recursos de sistema otimizados\n"
            result_message += "‚Ä¢ Performance melhorada\n"
            result_message += "‚Ä¢ Consumo de recursos reduzido\n\n"
            result_message += (
                "‚ö†Ô∏è IMPORTANTE: Reinicie o sistema para aplicar todas as mudan√ßas!"
            )

            progress_window.after(3000, progress_window.destroy)
            messagebox.showinfo("Softwares Desabilitados", result_message)

        elif len(sucessos) > len(erros):
            status_label.config(text="‚ö†Ô∏è Conclu√≠do com alguns avisos")
            result_message = f"‚ö†Ô∏è SOFTWARES PARCIALMENTE DESABILITADOS\n\n"
            result_message += f"‚úÖ Sucessos: {len(sucessos)}\n"
            result_message += f"‚ö†Ô∏è Avisos/Erros: {len(erros)}\n\n"
            result_message += "üíª A maior parte dos softwares foi desabilitada.\n\n"
            result_message += "Detalhes dos erros:\n"
            for erro in erros[:5]:
                result_message += f"‚Ä¢ {erro}\n"
            if len(erros) > 5:
                result_message += f"... e mais {len(erros) - 5} erros\n"
            result_message += "\n‚ö†Ô∏è IMPORTANTE: Reinicie o sistema!"

            progress_window.after(2000, progress_window.destroy)
            messagebox.showwarning("Desabilita√ß√£o Parcial", result_message)

        else:
            status_label.config(text="‚ùå Conclu√≠do com v√°rios erros")
            result_message = f"‚ùå MUITOS ERROS NA DESABILITA√á√ÉO\n\n"
            result_message += f"‚úÖ Sucessos: {len(sucessos)}\n"
            result_message += f"‚ùå Erros: {len(erros)}\n\n"
            result_message += "Principais erros:\n"
            for erro in erros[:3]:
                result_message += f"‚Ä¢ {erro}\n"
            result_message += "\nVerifique se est√° executando como Administrador!"

            progress_window.after(2000, progress_window.destroy)
            messagebox.showerror("Erros na Desabilita√ß√£o", result_message)

        # Log da atividade
        self.handlers.parent.log_activity(
            f"Desabilita√ß√£o de softwares: {len(sucessos)} sucessos, {len(erros)} erros"
        )
